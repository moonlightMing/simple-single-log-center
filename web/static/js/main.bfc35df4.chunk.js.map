{"version":3,"sources":["store/logWindow/reducer.js","store/logWindow/actionTypes.js","store/hostTree/reducer.js","store/hostTree/actionTypes.js","store/reducer.js","store/index.js","store/hostTree/actionCreators.js","components/SearchTree/index.js","components/FileController/FileCard/index.js","components/FileController/index.js","components/DirRouter/index.js","components/LogWindow/index.js","components/FileWindow/ListStyleBtn/index.js","components/LogWindow/GoBackBtn/index.js","components/FileWindow/index.js","components/XtermWindow/index.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","fromJS","dirData","isSpinning","reducer","state","arguments","length","undefined","action","type","set","host","routers","merge","data","hostList","isWebTerminalOpen","hostTree_reducer","createRootReducer","history","combineReducers","router","connectRouter","logWindow","logWindowReducer","hostTree","hostTreeReducer","initialState","Immutable","Map","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","routerMiddleware","isWebTerminalOpenAction","dispatch","Axios","get","then","res","result","DirectoryTree","tree","TreeNode","Search","input","getParentKey","title","parentKey","i","node","children","some","item","key","dataList","SearchTree","expandedKeys","searchValue","autoExpandParent","gData","onExpand","_this","setState","onChange","e","value","target","map","indexOf","filter","self","loop","index","beforeStr","substr","afterStr","react_default","a","createElement","style","color","icon","isLeaf","_this2","this","props","catch","modal","error","content","event","_this$props","params","dir","vmode","push","pathname","search","queryString","stringify","_ref","open","concat","_this$state","generateList","textAlign","className","marginBottom","placeholder","expandAction","onDoubleClick","onNodeDoubleClick","bind","onRightClick","onNodeRightClick","React","Component","connect","getIn","parse","substring","bindActionCreators","withRouter","FileCard","card","hoverable","bodyStyle","padding","paddingTop","paddingBottom","Meta","avatar","fileType","shape","size","FileController","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","listData","grid","xs","sm","md","lg","xl","getDirItem","assertThisInitialized","_this$props$params","nextProps","nextHost","nextDir","path","err","itemType","itemName","slice","trim","querystring","_this3","spin","spinning","wrapperClassName","list","dataSource","renderItem","Item","name","onClick","onGridClick","components_FileController_FileCard","DirRouter","param","dirList","split","react","marginRight","breadcrumb","BreadcrumbItem_default","join","Link","to","LogWindow","Terminal","applyAddon","fit","attach","location","protocol","logParams","socketURL","hostname","port","ws","WebSocket","term","fontSize","cursorBlink","scrollback","tabStopWidth","document","getElementById","detach","close","id","ListStyleBtn","es_button","marginLeft","GoBackBtn","goBack","FileWindow","Route","exact","component","Switch","skeleton","XtremWindow","rows","termHeight","termWidth","cols","onclose","clear","writeln","addEventListener","onWindowResize","removeEventListener","Sider","Content","logConsole","layout","components_SearchTree","FileWindow_FileWindow","termConsole","components_XtermWindow","App","es","immutable","Boolean","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfc35df4.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport {fromJS} from 'immutable';\r\n\r\nconst defaultState = fromJS ({\r\n  dirData: [],\r\n  isSpinning: true,\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CHANGE_WATCH_HSOT:\r\n      return state.set ('watchHost', action.host);\r\n    case actionTypes.CHANGE_ROUTER:\r\n      return state.set ('routers', action.routers);\r\n    case actionTypes.GET_DIR_ITEM:\r\n      return state.merge ({dirData: action.data}, {isSpinning: false});\r\n    case actionTypes.SET_SPIN_STATUS:\r\n      return state.set ('isSpinning', action.isSpinning);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const CHANGE_WATCH_HSOT = 'logWindow/CHANGE_WATCH_HSOT';\r\nexport const CHANGE_ROUTER = 'logWindow/CHANGE_ROUTER';\r\nexport const GET_DIR_ITEM = 'logWindow/GET_DIR_ITEM';\r\nexport const SET_SPIN_STATUS = 'logWindow/SET_SPIN_STATUS';\r\n","import * as actionTypes from './actionTypes';\r\nimport {fromJS} from 'immutable';\r\n\r\nconst defaultState = fromJS ({\r\n  hostList: [],\r\n  isWebTerminalOpen: false,\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n  if (action.type === actionTypes.INIT_HOST_LIST) {\r\n    return state.set ('hostList', action.data);\r\n  }\r\n\r\n  if (action.type === actionTypes.IS_WEB_TERMINAL_OPEN) {\r\n    return state.set ('isWebTerminalOpen', action.data);\r\n  }\r\n\r\n  return state;\r\n};\r\n","export const INIT_HOST_LIST = 'hostTree/INIT_HOST_LIST';\r\n\r\nexport const IS_WEB_TERMINAL_OPEN = 'hostTree/IS_WEB_TERMINAL_OPEN';\r\n","import { combineReducers } from 'redux-immutable';\r\nimport logWindowReducer from './logWindow/reducer';\r\nimport hostTreeReducer from './hostTree/reducer';\r\nimport { connectRouter } from 'connected-react-router/immutable';\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    logWindow: logWindowReducer,\r\n    hostTree: hostTreeReducer\r\n})\r\n\r\nexport default createRootReducer;","import { createBrowserHistory } from 'history';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router/immutable';\r\nimport createRootReducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.Map()\r\nexport const history = createBrowserHistory()\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    createRootReducer(history),\r\n    initialState,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            thunk,\r\n            routerMiddleware(history)\r\n        ),\r\n    ),\r\n);\r\n\r\nexport default store;","import * as actionTypes from './actionTypes';\r\nimport {fromJS} from 'immutable';\r\nimport Axios from 'axios';\r\n\r\nexport const initHostListAction = () => {\r\n  return dispatch => {\r\n    Axios.get ('/api/listAllHosts')\r\n      .then (res => {\r\n        const data = res.data;\r\n        const action = {\r\n          type: actionTypes.INIT_HOST_LIST,\r\n          data: fromJS (data.result),\r\n        };\r\n        dispatch (action);\r\n      })\r\n      .catch (() => {});\r\n  };\r\n};\r\n\r\nexport const isWebTerminalOpenAction = () => {\r\n  return dispatch => {\r\n    Axios.get ('/api/isWebTerminalOpen').then (res => {\r\n      const data = res.data;\r\n      const action = {\r\n        type: actionTypes.IS_WEB_TERMINAL_OPEN,\r\n        data: fromJS (data.result),\r\n      };\r\n      dispatch (action);\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport {Tree, Input, Icon, Modal} from 'antd';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport queryString from 'querystring';\r\nimport {bindActionCreators} from 'redux';\r\nimport {isWebTerminalOpenAction} from '../../store/hostTree/actionCreators';\r\n\r\nconst DirectoryTree = Tree.DirectoryTree;\r\nconst {TreeNode} = Tree;\r\nconst Search = Input.Search;\r\n\r\nconst getParentKey = (title, tree) => {\r\n  let parentKey;\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const node = tree[i];\r\n    if (node.children) {\r\n      if (node.children.some (item => item.title === title)) {\r\n        parentKey = node.key;\r\n      } else if (getParentKey (title, node.children)) {\r\n        parentKey = getParentKey (title, node.children);\r\n      }\r\n    }\r\n  }\r\n  return parentKey;\r\n};\r\n\r\nconst dataList = [];\r\n\r\nconst generateList = data => {\r\n  for (let i = 0; i < data.length; i++) {\r\n    const node = data[i];\r\n    const key = node.key;\r\n    dataList.push ({key, title: node.title});\r\n    if (node.children) {\r\n      generateList (node.children);\r\n    }\r\n  }\r\n};\r\n\r\nclass SearchTree extends React.Component {\r\n  state = {\r\n    expandedKeys: ['1'],\r\n    searchValue: '',\r\n    autoExpandParent: true,\r\n    gData: [],\r\n  };\r\n\r\n  componentWillMount () {\r\n    // 检测WebTerminal是否开启\r\n    this.props.isWebTerminalOpenAction ();\r\n\r\n    Axios.get ('/api/listAllHosts')\r\n      .then (res => {\r\n        this.setState ({\r\n          gData: res.data.result,\r\n        });\r\n      })\r\n      .catch (() => {\r\n        Modal.error ({\r\n          title: 'ERR_CODE 504',\r\n          content: '网络连接错误',\r\n        });\r\n      });\r\n  }\r\n\r\n  onExpand = expandedKeys => {\r\n    this.setState ({\r\n      expandedKeys,\r\n      autoExpandParent: false,\r\n    });\r\n  };\r\n\r\n  onNodeDoubleClick (event, node) {\r\n    if (!node.isLeaf ()) {\r\n      return;\r\n    }\r\n    \r\n    const {params, history} = this.props;\r\n    // 避免重复双击引起的多次请求\r\n    // if (this.props.params.host === host) {\r\n    //   return;\r\n    // }\r\n\r\n    // 搜索时，需要使用创建元素时写入的host属性\r\n    params.host = node.props.host;\r\n    params.dir = '';\r\n    if (!params.vmode) {\r\n      params.vmode = 'grid';\r\n    }\r\n    history.push ({\r\n      pathname: '/listdir',\r\n      search: queryString.stringify (params),\r\n    });\r\n  }\r\n\r\n  onNodeRightClick({event, node}) {\r\n    if (!node.isLeaf ()) {\r\n      return;\r\n    }\r\n    if (this.props.isWebTerminalOpen) {\r\n      window.open (`/terminal?host=${node.props.host}`);\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    const value = e.target.value;\r\n    const expandedKeys = dataList\r\n      .map (item => {\r\n        if (item.title.indexOf (value) > -1) {\r\n          return getParentKey (item.title, this.state.gData);\r\n        }\r\n        return null;\r\n      })\r\n      .filter ((item, i, self) => item && self.indexOf (item) === i);\r\n\r\n    this.setState ({\r\n      expandedKeys,\r\n      searchValue: value,\r\n      autoExpandParent: true,\r\n    });\r\n  };\r\n\r\n  loop = data =>\r\n    data.map (item => {\r\n      let {searchValue} = this.state;\r\n      const index = item.title.indexOf (searchValue);\r\n      const beforeStr = item.title.substr (0, index);\r\n      const afterStr = item.title.substr (index + searchValue.length);\r\n      const title = index > -1\r\n        ? <span>\r\n            {beforeStr}\r\n            <span style={{color: '#f50'}}>{searchValue}</span>\r\n            {afterStr}\r\n          </span>\r\n        : <span>{item.title}</span>;\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode icon={<Icon type=\"home\" />} key={item.key} title={title}>\r\n            {this.loop (item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return (\r\n        <TreeNode\r\n          icon={<Icon type=\"desktop\" />}\r\n          key={item.key}\r\n          title={title}\r\n          host={item.title}\r\n          isLeaf\r\n        />\r\n      );\r\n    });\r\n\r\n  render () {\r\n    const {expandedKeys, autoExpandParent, gData} = this.state;\r\n    // 进行数组扁平化处理\r\n    generateList (gData);\r\n    return (\r\n      <div style={{textAlign: 'left'}}>\r\n        <Search\r\n          className=\"treeNodeUnselectable\"\r\n          style={{marginBottom: 8}}\r\n          placeholder=\"Search\"\r\n          onChange={this.onChange}\r\n        />\r\n        <DirectoryTree\r\n          expandAction=\"doubleClick\"\r\n          onExpand={this.onExpand}\r\n          expandedKeys={expandedKeys}\r\n          autoExpandParent={autoExpandParent}\r\n          onDoubleClick={this.onNodeDoubleClick.bind (this)}\r\n          onRightClick={this.onNodeRightClick.bind (this)}\r\n        >\r\n          {this.loop (gData)}\r\n        </DirectoryTree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    gData: state.getIn (['hostTree', 'hostList']),\r\n    isWebTerminalOpen: state.getIn (['hostTree', 'isWebTerminalOpen']),\r\n    params: queryString.parse (\r\n      state.getIn (['router', 'location', 'search']).substring (1)\r\n    ),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  isWebTerminalOpenAction: bindActionCreators (\r\n    isWebTerminalOpenAction,\r\n    dispatch\r\n  ),\r\n});\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (\r\n  withRouter (SearchTree)\r\n);\r\n","import React from 'react';\r\nimport { Avatar, Card } from 'antd';\r\nimport './index.css';\r\n\r\nconst FileCard = (props) => {\r\n    return (\r\n        <Card\r\n            className=\"file-card\"\r\n            hoverable={true}\r\n            bodyStyle={{\r\n                padding: 10,\r\n                paddingTop: 12,\r\n                paddingBottom: 12,\r\n\r\n            }}\r\n        >\r\n            <Card.Meta\r\n                avatar={\r\n                    props.fileType === 0\r\n                        ?\r\n                        <Avatar shape=\"square\" size=\"large\" icon=\"file-text\" />\r\n                        :\r\n                        <Avatar shape=\"square\" size=\"large\" icon=\"folder-open\" />\r\n                }\r\n                className=\"treeNodeUnselectable\"\r\n                title={\r\n                    <span className=\"file-name\">\r\n                        {props.title}\r\n                    </span>\r\n                }\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FileCard;","import React from 'react';\r\nimport { List, Spin, Avatar, Modal } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport querystring from 'querystring';\r\nimport FileCard from './FileCard';\r\nimport './index.css';\r\nimport Axios from 'axios';\r\n\r\nclass FileController extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSpinning: true,\r\n      listData: [],\r\n      grid: {\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 3,\r\n        lg: 4,\r\n        xl: 5,\r\n      },\r\n    };\r\n    this.getDirItem = this.getDirItem.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { host, dir } = this.props.params;\r\n    this.getDirItem(host, dir);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.params.vmode === this.props.params.vmode) {\r\n      const nextHost = nextProps.params.host;\r\n      const nextDir = nextProps.params.dir;\r\n      if (\r\n        nextHost !== this.props.params.host ||\r\n        nextDir !== this.props.params.dir\r\n      ) {\r\n        this.getDirItem(nextHost, nextDir);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDirItem(host, path) {\r\n    if (typeof host === 'undefined' || typeof path === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      isSpinning: true,\r\n    });\r\n    Axios.get('/api/listDir', {\r\n      params: {\r\n        host,\r\n        path,\r\n      },\r\n    }).then(res => {\r\n      const data = res.data.result;\r\n      this.setState({\r\n        listData: data,\r\n        isSpinning: false,\r\n      });\r\n    }).catch((err) => {\r\n      Modal.error({\r\n        title: '网络连接错误',\r\n        content: '请检查服务器是否开启或密钥配置',\r\n      })\r\n    })\r\n  }\r\n\r\n  onGridClick(itemType, itemName) {\r\n    const { params, history } = this.props;\r\n    let dir;\r\n    if (itemName.slice(0, 1) === '/') {\r\n      dir = params.dir.trim() + itemName;\r\n    } else {\r\n      dir = params.dir.trim() + '/' + itemName;\r\n    }\r\n    if (itemType === 1) {\r\n      history.push({\r\n        pathname: '/listdir',\r\n        search: querystring.stringify({\r\n          host: params.host,\r\n          dir,\r\n          vmode: params.vmode,\r\n        }),\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: '/logbrowser',\r\n        search: querystring.stringify({\r\n          host: params.host,\r\n          dir,\r\n        }),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Spin\r\n        spinning={this.state.isSpinning}\r\n        size=\"large\"\r\n        wrapperClassName=\"spin\"\r\n      >\r\n        <List\r\n          size=\"middle\"\r\n          grid={this.props.params.vmode === 'list' ? null : this.state.grid}\r\n          dataSource={this.state.listData}\r\n          renderItem={item => (\r\n            <List.Item\r\n              key={item.name}\r\n              onClick={this.onGridClick.bind(this, item.type, item.name)}\r\n            >\r\n              {this.props.params.vmode === 'list'\r\n                ? <List.Item.Meta\r\n                  avatar={\r\n                    item.type === 0\r\n                      ? <Avatar\r\n                        size=\"large\"\r\n                        shape=\"square\"\r\n                        icon=\"file-text\"\r\n                      />\r\n                      : <Avatar\r\n                        size=\"large\"\r\n                        shape=\"square\"\r\n                        icon=\"folder-open\"\r\n                      />\r\n                  }\r\n                  key={item.name}\r\n                  title={\r\n                    <span className=\"file-name treeNodeUnselectable\">\r\n                      {item.name}\r\n                    </span>\r\n                  }\r\n                />\r\n                : <FileCard\r\n                  className=\"file-card\"\r\n                  title={item.name}\r\n                  fileType={item.type}\r\n                />}\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  params: querystring.parse(\r\n    state.getIn(['router', 'location', 'search']).substring(1)\r\n  ),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(FileController);\r\n","import React, {Fragment} from 'react';\r\nimport {Breadcrumb} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport querystring from 'querystring';\r\nimport BreadcrumbItem from 'antd/lib/breadcrumb/BreadcrumbItem';\r\n\r\nclass DirRouter extends React.Component {\r\n  render () {\r\n    const {pathname, params} = this.props;\r\n    const param = querystring.parse (params.substring (1));\r\n    const dirList = param.dir.split ('/').slice (1);\r\n    return (\r\n      <Fragment>\r\n        <span style={{marginRight: '5px'}} className=\"treeNodeUnselectable\">\r\n          {param.host} : /\r\n        </span>\r\n        <Breadcrumb className=\"treeNodeUnselectable\">\r\n          {dirList.map ((item, index) => {\r\n            if (index === dirList.length - 1) {\r\n              return <BreadcrumbItem key={index}>{item}</BreadcrumbItem>;\r\n            } else {\r\n              const dir = '/' + dirList.slice (0, index + 1).join ('/');\r\n              return (\r\n                <BreadcrumbItem key={index}>\r\n                  <Link\r\n                    to={{\r\n                      path: pathname,\r\n                      search: querystring.stringify ({\r\n                        host: param.host,\r\n                        dir,\r\n                        vmode: param.vmode,\r\n                      }),\r\n                    }}\r\n                  >\r\n                    {item}\r\n                  </Link>\r\n                </BreadcrumbItem>\r\n              );\r\n            }\r\n          })}\r\n        </Breadcrumb>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pathname: state.getIn (['router', 'location', 'pathname']),\r\n    params: state.getIn (['router', 'location', 'search']),\r\n  };\r\n};\r\n\r\nexport default connect (mapStateToProps, null) (DirRouter);\r\n","import React from 'react';\r\nimport querystring from 'querystring';\r\nimport {connect} from 'react-redux';\r\nimport {Terminal} from 'xterm';\r\nimport 'xterm/dist/xterm.css';\r\nimport * as fit from 'xterm/lib/addons/fit/fit';\r\nimport * as attach from 'xterm/lib/addons/attach/attach';\r\nimport './index.css';\r\n\r\nclass LogWindow extends React.Component {\r\n  constructor (props) {\r\n    super (props);\r\n    Terminal.applyAddon (fit);\r\n    Terminal.applyAddon (attach);\r\n\r\n    const location = window.location;\r\n    const protocol = (location.protocol === 'https:') ? 'wss://' : 'ws://'\r\n    const logParams = querystring.stringify ({\r\n      host: this.props.params.host,\r\n      path: this.props.params.dir,\r\n    });\r\n    let socketURL = protocol + location.hostname + ((location.port) ? (':' + location.port) : '') + \"/api/tailLog?\" + logParams\r\n    // let socketURL = 'ws://localhost:9090/api/tailLog?' + logParams;\r\n    const ws = new WebSocket (socketURL);\r\n\r\n    let term = new Terminal ({\r\n      fontSize: 12,\r\n      cursorBlink: 5,\r\n      scrollback: 200,\r\n      tabStopWidth: 5,\r\n    });\r\n\r\n    this.state = {\r\n      ws,\r\n      term,\r\n    };\r\n  }\r\n\r\n  componentDidMount () {\r\n    let {term, ws} = this.state;\r\n    term.open (document.getElementById ('xterm-win'));\r\n    term.attach (ws, false, true);\r\n    term.fit ();\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    let {term} = this.state;\r\n    term.fit ();\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.state.term.detach(this.state.ws)\r\n    this.state.ws.close ();\r\n  }\r\n\r\n  render () {\r\n    return <div id=\"xterm-win\" />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  params: querystring.parse (\r\n    state.getIn (['router', 'location', 'search']).substring (1)\r\n  ),\r\n});\r\n\r\nexport default connect (mapStateToProps, null) (LogWindow);\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport querystring from 'querystring';\r\n\r\nclass ListStyleBtn extends React.Component {\r\n  \r\n    onClick() {\r\n        const { pathname, params } = this.props;\r\n        const vmode = (params.vmode === 'grid') ? 'list' : \"grid\";\r\n        this.props.history.push({\r\n            pathname: pathname,\r\n            search: querystring.stringify({\r\n                host: params.host,\r\n                vmode,\r\n                dir: params.dir\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // 按钮图标应与实际状态相反\r\n        return (\r\n            <Button\r\n                style={{ marginLeft: \"auto\", marginRight: \"2px\" }}\r\n                onClick={this.onClick.bind(this)}\r\n                icon={this.props.params.vmode === 'grid' ? \"ordered-list\" : \"table\"}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nListStyleBtn.propTypes = {\r\n    pathname: PropTypes.string,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    pathname: state.getIn(['router', 'location', 'pathname']),\r\n    params: querystring.parse(state.getIn(['router', 'location', 'search']).substring(1)),\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ListStyleBtn);","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\n\r\nconst GoBackBtn = (props) => {\r\n    return (\r\n        <Button\r\n            style={{ marginLeft: \"auto\", marginRight: \"2px\" }}\r\n            onClick={() => props.history.goBack()}\r\n            icon={\"arrow-left\"}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GoBackBtn;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Skeleton } from 'antd';\r\nimport \"./index.css\";\r\nimport FileController from '../FileController';\r\nimport DirRouter from '../DirRouter';\r\nimport LogWindow from '../LogWindow';\r\nimport ListStyleBtn from './ListStyleBtn';\r\nimport GoBackBtn from '../LogWindow/GoBackBtn';\r\n\r\nexport default class FileWindow extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"warpper\">\r\n                <div className=\"nav-hader\">\r\n                    <Route exact={true} path=\"/\" component={null}></Route>\r\n\r\n                    <Route path=\"/listdir\" component={DirRouter}></Route>\r\n                    <Route path=\"/listdir\" component={ListStyleBtn}></Route>\r\n\r\n                    <Route path=\"/logbrowser\" component={GoBackBtn}></Route>\r\n                </div>\r\n                <div className=\"window\">\r\n                    <Switch>\r\n                        <Route exact={true} path=\"/\" component={Skeleton}></Route>\r\n                        <Route path=\"/listdir\" component={FileController}></Route>\r\n                        <Route path=\"/logbrowser\" component={LogWindow}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport querystring from 'querystring';\r\nimport {Terminal} from 'xterm';\r\nimport {connect} from 'react-redux';\r\nimport 'xterm/dist/xterm.css';\r\nimport * as fit from 'xterm/lib/addons/fit/fit';\r\nimport * as attach from 'xterm/lib/addons/attach/attach';\r\nimport './index.css';\r\n\r\nclass XtremWindow extends React.Component {\r\n  constructor (props) {\r\n    super (props);\r\n    Terminal.applyAddon (attach);\r\n    Terminal.applyAddon (fit);\r\n\r\n    const term = new Terminal ({\r\n      rows: 36,\r\n    });\r\n\r\n    this.state = {\r\n      ws: null,\r\n      term,\r\n    };\r\n  }\r\n\r\n  onWindowResize () {\r\n    const {term} = this.state;\r\n    term.fit ();\r\n  }\r\n\r\n  componentDidMount () {\r\n    const {term} = this.state;\r\n    const {host, dir} = this.props.params;\r\n    // 开始websocket连接\r\n    // 必须在组件挂在完毕后才能获取到term的size，继而连接websocket设定terminal大小\r\n    const location = window.location;\r\n    const protocol = (location.protocol === 'https:') ? 'wss://' : 'ws://'\r\n    const logParams = querystring.stringify ({\r\n      host,\r\n      path: dir,\r\n      termHeight: term.rows,\r\n      termWidth: term.cols,\r\n    });\r\n    let socketURL = protocol + location.hostname + ((location.port) ? (':' + location.port) : '') + \"/api/terminalShell?\" + logParams\r\n    // let socketURL = `ws://localhost:9090/api/terminalShell?${logParams}`;\r\n    const ws = new WebSocket (socketURL);\r\n    this.setState ({ws});\r\n    term.open (document.getElementById ('terminal-container'));\r\n    term.fit ();\r\n\r\n    // websocket关闭或断开时，提示用户\r\n    ws.onclose = () => {\r\n      term.detach (ws);\r\n      term.clear ();\r\n      term.writeln ('\\r\\nThe WebSocket Close...');\r\n    };\r\n\r\n    term.attach (ws, true, false);\r\n\r\n    // 注册窗口resize事件监听，\r\n    window.addEventListener ('resize', this.onWindowResize.bind (this));\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    \r\n    const {ws} = this.state;    \r\n\r\n    // 关闭服务端websocket\r\n    ws.close ();\r\n\r\n    // 取消窗口resize事件监听\r\n    window.removeEventListener ('resize', this.onWindowResize.bind (this));\r\n  }\r\n\r\n  render () {\r\n    return <div id=\"terminal-container\" />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  params: querystring.parse (\r\n    state.getIn (['router', 'location', 'search']).substring (1)\r\n  ),\r\n});\r\n\r\nexport default connect (mapStateToProps, null) (XtremWindow);\r\n","import React from 'react';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport {ConnectedRouter} from 'connected-react-router/immutable';\r\nimport {Layout} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport SearchTree from './components/SearchTree';\r\nimport FileWindow from './components/FileWindow';\r\nimport XtermWindow from './components/XtermWindow';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nconst {Sider, Content} = Layout;\r\n\r\nconst logConsole = () => (\r\n  <Layout className=\"layout\">\r\n    <Sider className=\"sider\">\r\n      <SearchTree />\r\n    </Sider>\r\n    <Layout>\r\n      <Content className=\"content\">\r\n        <FileWindow />\r\n      </Content>\r\n    </Layout>\r\n  </Layout>\r\n);\r\n\r\nconst termConsole = () => <XtermWindow />;\r\n\r\nconst App = ({history}) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        {/* <BrowserRouter> */}\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/terminal\" component={termConsole} />\r\n            <Route path=\"/\" component={logConsole} />\r\n          </Switch>\r\n        </div>\r\n        {/* </BrowserRouter> */}\r\n      </ConnectedRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as store from './store';\r\n\r\nReactDOM.render(<App history={store.history}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}